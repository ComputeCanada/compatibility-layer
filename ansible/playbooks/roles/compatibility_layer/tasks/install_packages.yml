# Install a specified list of sets and packages.
---
- name: Find all strings in libc library
  command: "strings {{ gentoo_prefix_path }}/usr/lib64/libc.a"
  register: libc_strings
  when: eessi_host_os == "linux"

- name: Find user defined trusted dirs in libc strings output
  set_fact: match='{{ libc_strings.stdout | regex_search("\n" + item + "/?\n") | default('', True) | string | length>0 }}'
  with_items: "{{ prefix_user_defined_trusted_dirs }}"
  register: trusted_dirs_in_libc

- name: (Re)install glibc with the user-defined-trusted-dirs option
  portage:
    package: sys-libs/glibc
    noreplace: no
    oneshot: yes
  become: no
  environment:
    EXTRA_EMAKE: "user-defined-trusted-dirs={{ prefix_user_defined_trusted_dirs | join(':') }}"
  when:
    - eessi_host_os == "linux"
    - trusted_dirs_in_libc.results | selectattr('ansible_facts.match', 'equalto', False) | list | length>0

- name: Install package set {{ package_sets }}
  portage:
    package: "@{{ item }}"
    state: present
  with_items: "{{ package_sets }}"
  become: no
  tags:
    - set

- name: Install additional packages
  portage:
    package: "{{ item }}"
    state: present
  with_items: "{{ prefix_packages }}"
  become: no

- name: "Get the username running the deployment (not root)"
  command: whoami
  changed_when: false
  become: no
  register: username_on_host

- name: "Fix permissions after installing as portage/root"
  file:
    owner: "{{ username_on_host.stdout }}"
    group: "{{ username_on_host.stdout }}"
    path: "{{ gentoo_prefix_path }}"
    recurse: true
  become: yes
